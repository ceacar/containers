#!/usr/bin/env bash
set -e

# usage: ./build_images [--pull/--push] component_name

docker_repo_path=ceacar/exp

function build_image(){
  local component=${1:?component name empty}
  local image_name=${2:?image_name empty}
  echo "building $component"
  cd ./$component/docker
  docker build --build-arg docker_build_path=$PWD -t $image_name .
  #docker build --build-arg docker_build_path=$PWD -t $image_name - <$CONTAINER_PATH/$component/docker/dockerfile_$component
  echo "run \"docker run -it $image_name bash\" to try it out"
  cd - > /dev/null
}

function push_image(){
  image_name=${1:?image_name empty}
  echo "pushing image $image_name"
  docker tag ${image_name}:latest $docker_repo_path:${image_name}
  docker push $docker_repo_path:$image_name
}

function run_image(){
  image_name=${1:?image_name empty}
  docker run -it $image_name bash
}

function build_component(){
  local push_flag
  push_flag=false
  pull_flag=false
  run_flag=false

  # check if --push flag is set
  if [ "$1" = "--push" ];then
    shift
    push_flag=true 
  fi

  # check if --push flag is set
  if [ "$1" = "--pull" ];then
    shift
    pull_flag=true 
  fi

  # check if --push flag is set
  if [ "$1" = "--run" ];then
    shift
    run_flag=true 
  fi


  local component=${1:?component name empty}
  local image_name="simple_$component"

  build_image $component $image_name

  if $pull_flag;then
    docker pull $docker_repo_path:$image_name
    return
  fi


  if $push_flag;then
    push_image $image_name
    return
  fi

  if $run_flag;then
    run_image $image_name
    return
  fi
}

build_component $@
